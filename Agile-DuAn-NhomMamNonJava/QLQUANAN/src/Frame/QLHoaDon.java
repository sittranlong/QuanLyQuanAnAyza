/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import DAO.BillDAO;
import DAO.BillDetailDAO;
import DAO.ProductDAO;
import Dialog.ShowDialog;
import Format.Formater;
import Models.Bill;
import Models.BillDetail;
import Models.Product;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sangtm
 */
public class QLHoaDon extends javax.swing.JPanel {

    ArrayList<Bill> listB = new ArrayList<>();
    ArrayList<BillDetail> listBD = new ArrayList<>();
    ArrayList<Product> listP = new ArrayList<>();

    /**
     * Creates new form panel1
     */
    public QLHoaDon() {
        initComponents();
        loadListHD();
        fillTable();
    }

    public void loadListHD() {
        listB = BillDAO.getList();
    }

    public void loadListHDCT(int id) {
        listBD = BillDetailDAO.getList(id);
    }

    public void fillTable() {
        DefaultTableModel dtm = (DefaultTableModel) tb_hoadon.getModel();
        dtm.setRowCount(0);
        for (Bill l : listB) {
            dtm.addRow(new Object[]{l.getId(), l.getId_customer(), l.getId_staff(), Formater.formatDate("dd-MM-yyyy", l.getNgayban()), l.getThanhtoan()});
        }
    }

    public String getTenMon(int id) {
        listP = ProductDAO.getList();
        for (Product l : listP) {
            if (id == l.getId()) {
                return l.getTenmonan();
            }
        }
        return null;
    }

    public void fillTableHDCT() {
        DefaultTableModel dtm = (DefaultTableModel) tb_hoadonchitiet.getModel();
        dtm.setRowCount(0);
        for (BillDetail l : listBD) {
            String tenmon = getTenMon(l.getId_product());
            dtm.addRow(new Object[]{l.getId(), tenmon, l.getSoluong(), l.getDongia(), l.getTongtien()});
        }
    }
    
    public void clearTableHDCT() {
        DefaultTableModel dtm = (DefaultTableModel) tb_hoadonchitiet.getModel();
        dtm.setRowCount(0);
    }

    public Bill searchBill(int id) {
        for (Bill l : listB) {
            if (l.getId() == id) {
                return l;
            }
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_mahoadon = new javax.swing.JTextField();
        btn_timkiem = new javax.swing.JButton();
        pn_tbhoadon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_hoadon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pn_tb_chitiet = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_hoadonchitiet = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_mahoadon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(tf_mahoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 18, 125, -1));

        btn_timkiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_timkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/timkiem.png"))); // NOI18N
        btn_timkiem.setText("Tìm kiếm");
        btn_timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemActionPerformed(evt);
            }
        });
        add(btn_timkiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 11, -1, -1));

        pn_tbhoadon.setBackground(new java.awt.Color(204, 204, 255));
        pn_tbhoadon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tb_hoadon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_hoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã khách hàng", "Mã nhân viên", "Ngày bán", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_hoadon.setRowHeight(25);
        tb_hoadon.setRowMargin(2);
        tb_hoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_hoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_hoadon);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("Hóa đơn");

        javax.swing.GroupLayout pn_tbhoadonLayout = new javax.swing.GroupLayout(pn_tbhoadon);
        pn_tbhoadon.setLayout(pn_tbhoadonLayout);
        pn_tbhoadonLayout.setHorizontalGroup(
            pn_tbhoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(pn_tbhoadonLayout.createSequentialGroup()
                .addGap(404, 404, 404)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_tbhoadonLayout.setVerticalGroup(
            pn_tbhoadonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_tbhoadonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        add(pn_tbhoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 880, 295));

        pn_tb_chitiet.setBackground(new java.awt.Color(204, 204, 255));
        pn_tb_chitiet.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tb_hoadonchitiet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_hoadonchitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn chi tiết", "Tên món ăn", "Số lượng", "Đơn giá", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_hoadonchitiet.setRowHeight(25);
        tb_hoadonchitiet.setRowMargin(2);
        jScrollPane2.setViewportView(tb_hoadonchitiet);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Hóa đơn chi tiết");

        javax.swing.GroupLayout pn_tb_chitietLayout = new javax.swing.GroupLayout(pn_tb_chitiet);
        pn_tb_chitiet.setLayout(pn_tb_chitietLayout);
        pn_tb_chitietLayout.setHorizontalGroup(
            pn_tb_chitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_tb_chitietLayout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jLabel2)
                .addContainerGap(354, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pn_tb_chitietLayout.setVerticalGroup(
            pn_tb_chitietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_tb_chitietLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        add(pn_tb_chitiet, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 373, -1, 295));
    }// </editor-fold>//GEN-END:initComponents

    private void tb_hoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_hoadonMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tb_hoadon.getModel();
        int rowHoaDon = tb_hoadon.getSelectedRow();
        int idHoaDon = (int) dtm.getValueAt(rowHoaDon, 0);
        loadListHDCT(idHoaDon);
        fillTableHDCT();
    }//GEN-LAST:event_tb_hoadonMouseClicked

    private void btn_timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemActionPerformed
        // TODO add your handling code here:
        loadListHD();
        if (tf_mahoadon.getText().trim().isEmpty()) {
            loadListHD();
            fillTable();
            DefaultTableModel dtm = (DefaultTableModel) tb_hoadonchitiet.getModel();
            dtm.setRowCount(0);
            return;
        }
        int idInp;
        try {
            idInp = Integer.parseInt(tf_mahoadon.getText().trim());
        } catch (NumberFormatException e) {
            System.out.println(e);
            ShowDialog.openMessage(this, "Sai định dạng!", "Thông báo!");
            return;
        }
        Bill b = searchBill(idInp);
        if (b == null) {
            ShowDialog.openMessage(this, "Mã hóa đơn không tồn tại!", "Thông báo!");
            return;
        } else {
            DefaultTableModel dtm = (DefaultTableModel) tb_hoadon.getModel();
            dtm.setRowCount(0);
            dtm.addRow(new Object[]{b.getId(), b.getId_customer(), b.getId_staff(), b.getNgayban(), b.getThanhtoan()});
            tb_hoadon.setRowSelectionInterval(0, 0);
            int idHoaDon = (int) dtm.getValueAt(0, 0);
            loadListHDCT(idHoaDon);
            fillTableHDCT();
        }
    }//GEN-LAST:event_btn_timkiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_timkiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pn_tb_chitiet;
    private javax.swing.JPanel pn_tbhoadon;
    private javax.swing.JTable tb_hoadon;
    private javax.swing.JTable tb_hoadonchitiet;
    private javax.swing.JTextField tf_mahoadon;
    // End of variables declaration//GEN-END:variables
}
